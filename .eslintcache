[{"/Users/coffeymay/workspace/dev_sitev2/src/App.js":"1","/Users/coffeymay/workspace/dev_sitev2/src/components/Home.js":"2","/Users/coffeymay/workspace/dev_sitev2/src/components/Home2.js":"3","/Users/coffeymay/workspace/dev_sitev2/src/components/Nav.js":"4","/Users/coffeymay/workspace/dev_sitev2/src/index.js":"5","/Users/coffeymay/workspace/dev_sitev2/src/components/HomeSlides.js":"6","/Users/coffeymay/workspace/dev_sitev2/src/reportWebVitals.js":"7","/Users/coffeymay/workspace/dev_sitev2/src/components/Contact.js":"8","/Users/coffeymay/workspace/dev_sitev2/src/Contact.js":"9","/Users/coffeymay/workspace/dev_sitev2/src/Projects.js":"10","/Users/coffeymay/workspace/dev_sitev2/src/components/WeatherAPI.js":"11"},{"size":680,"mtime":1606355750534,"results":"12","hashOfConfig":"13"},{"size":2752,"mtime":1606614235143,"results":"14","hashOfConfig":"13"},{"size":2017,"mtime":1606527800753,"results":"15","hashOfConfig":"13"},{"size":1991,"mtime":1606357090783,"results":"16","hashOfConfig":"13"},{"size":314,"mtime":1606204840738,"results":"17","hashOfConfig":"13"},{"size":1018,"mtime":1606416110186,"results":"18","hashOfConfig":"13"},{"size":362,"mtime":1606188545504,"results":"19","hashOfConfig":"13"},{"size":3192,"mtime":1606205613429,"results":"20","hashOfConfig":"13"},{"size":2221,"mtime":1606355137621,"results":"21","hashOfConfig":"13"},{"size":531,"mtime":1606416083652,"results":"22","hashOfConfig":"13"},{"size":2706,"mtime":1606614473112,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"2k9fqp",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},"/Users/coffeymay/workspace/dev_sitev2/src/App.js",[],["51","52"],"/Users/coffeymay/workspace/dev_sitev2/src/components/Home.js",["53"],"/Users/coffeymay/workspace/dev_sitev2/src/components/Home2.js",[],"/Users/coffeymay/workspace/dev_sitev2/src/components/Nav.js",[],["54","55"],"/Users/coffeymay/workspace/dev_sitev2/src/index.js",[],["56","57"],"/Users/coffeymay/workspace/dev_sitev2/src/components/HomeSlides.js",[],"/Users/coffeymay/workspace/dev_sitev2/src/reportWebVitals.js",[],["58","59"],"/Users/coffeymay/workspace/dev_sitev2/src/components/Contact.js",[],"/Users/coffeymay/workspace/dev_sitev2/src/Contact.js",[],"/Users/coffeymay/workspace/dev_sitev2/src/Projects.js",[],"/Users/coffeymay/workspace/dev_sitev2/src/components/WeatherAPI.js",["60","61"],"import React, { useState, useEffect } from 'react'\nrequire('dotenv').config();\nconsole.log(process.env)\nconst REACT_APP_API_KEY = process.env.REACT_APP_API_KEY;\n\n\n\n\n\nexport default function WeatherAPI() {\n\n    useEffect(() => {\n        fetchData()\n\n    }, []);\n\n    const [cityName, setCityName] = useState([\"Nashville\"], fetchData);\n\n\n    const api_url = `http://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=${REACT_APP_API_KEY}`\n    function fetchData() {\n\n        fetch(api_url).then(response => {\n            return response.json()\n        }).then(data => {\n            console.log(data)\n            const num = (data.main.temp - 273.15) * 1.8000 + 32.00;\n            const cities = document.getElementsByTagName('option');\n            var citiesArr = cities;\n            setTimeout(function () {\n                [...citiesArr].forEach(function (element) {\n                    console.log(element.value)\n\n                });\n            }, 1000);\n            var n = num.toFixed(2);\n            let state;\n            if (data.name === 'Dallas') {\n                state = \"TX\"\n            } else if (data.name === \"Nashville\") {\n                state = \"TN\"\n            } else if (data.name === \"Los Angeles\") {\n                state = \"CA\"\n            } else if (data.name === \"London\") {\n                state = \"UK\"\n            } else if (data.name === \"New York City\") {\n                state = \"NY\"\n            }\n\n\n            document.getElementById('weather_card').innerHTML = `\n        <div style =\"height:10em; width:8em; border:1px solid white; \">\n        <label style=\"color:white;\" for=\"city-select\">Choose City:</label>\n        <form>\n        <select id=\"my-select\" style=\"color:white;background-color: transparent;\"value=\"none\">\n        <option  class=\"select_city\" style=\"background-color: transparent;\" value=\"Nashville\">Select City</option>\n        <option  class=\"select_city\" style=\"background-color: transparent;\" value=\"Nashville\">Nashville</option>\n        <option  class=\"select_city\" style=\"background-color: transparent;\" value=\"London\">London</option>\n        <option  class=\"select_city\" style=\"background-color: transparent;\" value=\"New York City\">New York City</option>\n        <option  class=\"select_city\" style=\"background-color: transparent;\" value=\"Los Angeles\">Los Angeles</option>\n        <option  class=\"select_city\" style=\"background-color: transparent;\" value=\"Dallas\">Dallas</option>\n       \n        </select>\n        </form>\n\n        <div class=\"sun2\"></div>\n        <h4>${data.name}</h4>\n         <h6>${state}</h6>\n        <h6>${n} Â°F</h6>\n        </div>\n              `\n        })\n\n\n    }\n\n    return (\n        <div>\n\n\n        </div>\n    )\n}\n\n\n",{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":21,"column":7,"nodeType":"68","messageId":"69","endLine":21,"endColumn":24},{"ruleId":"62","replacedBy":"70"},{"ruleId":"64","replacedBy":"71"},{"ruleId":"62","replacedBy":"72"},{"ruleId":"64","replacedBy":"73"},{"ruleId":"62","replacedBy":"74"},{"ruleId":"64","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":15,"column":8,"nodeType":"78","endLine":15,"endColumn":10,"suggestions":"79"},{"ruleId":"66","severity":1,"message":"80","line":17,"column":22,"nodeType":"68","messageId":"69","endLine":17,"endColumn":33},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"no-unused-vars","'REACT_APP_API_KEY' is assigned a value but never used.","Identifier","unusedVar",["81"],["82"],["81"],["82"],["81"],["82"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["83"],"'setCityName' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"84","fix":"85"},"Update the dependencies array to be: [fetchData]",{"range":"86","text":"87"},[256,258],"[fetchData]"]